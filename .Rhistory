rm(list=ls())
load("~/coursera/data scientist/Capstone/Coursera-SwiftKey/final/en_US/savedRdata/docs15dtmsparseremoved06.RData")
findAssocs(dtms4, "case", 0.8)
library(tm)
findAssocs(dtms4, "case", 0.8)
findAssocs(dtms3, "case", 0.8)
findAssocs(dtms2, "case", 0.8)
findAssocs(dtms1, "case", 0.8)
findAssocs(dtms2, "case", 0.1)
findAssocs(dtms2, "bacon", 0.5)
findAssocs(dtms2, "bacon", 0.2)
findAssocs(dtms3, "bacon", 0.2)
inspect(dtms2[1:3, 1000:1010])
inspect(dtms2[1:3, 10000:10010])
inspect(dtms2[1:3, 100000:100010])
inspect(dtms2[1:3, 50000:50010])
inspect(dtms2[1:3, 40000:40010])
inspect(dtms2[1:3, 37000:37010])
inspect(dtms2[1:3, 36000:36010])
inspect(dtms2[1:3, 35000:35010])
inspect(dtms2[1:3, 35000:35100])
inspect(dtms2[1:3, 35100:35200])
inspect(dtms2[1:3, 35200:35500])
inspect(dtms2[1:3, 35500:35800])
findAssocs(dtms, "bacon", 0.85)
findAssocs(dtms2, "bacon", 0.85)
findAssocs(dtms1, "bacon", 0.85)
findAssocs(dtms1, "bacon", 0.95)
findAssocs(dtms1, "bacon", 0.99)
class(dtms1)
class(as.matrix(dtms1))
which(as.matrix(dtms1)=="bacon")
inspect(dtms1[1:6, 1])
inspect(dtms1[1:2, 1])
inspect(dtms1[1:3, 1])
dtms1$nrow
dtms1$i
dtms1$j
dtms1$v
dtms1$dimnames
dtms2$dimnames
dtms2$dimnames[1:10]
dtms2$dimnames[1]
dtms2$dimnames[1:10]
dtms2$dimnames[1][1]
dtms2$dimnames[1][2]
dtms2$dimnames[[1]]
dtms2$dimnames[[3]]
dtms2$dimnames[[2]]
inspect(dtms2)
freq <- colSums(as.matrix(dtms2))
length(freq)
ord <- order(freq)
head(table(freq), 20)
freq <- sort(colSums(as.matrix(dtms2)), decreasing=TRUE)
head(freq, 50)
tail(freq, 50)
freq <- sort(colSums(as.matrix(dtms1)), decreasing=TRUE)
tail(freq, 50)
head(freq, 50)
head(freq, 500)
head(freq, 1000)
dtms2[1:3, 4]
inspect(dtms2[1:3, 4])
inspect(dtms2[1:3, 40000])
inspect(dtms2[1:3, 400000])
dtms4$nrow
dtms4$ncol
dtms4$dimnames
which(dtms4$dimnames=="yet base human right")
which(dtms4$dimnames="yet base human right")
which(dtms4$dimnames=="yet base human right")
which(dtms4$dimnames=="york base human right")
which(dtms4$dimnames=="yum yum yum yum")
which(dtms4=="yum yum yum yum")
which(dtms4$dimnames=="yum yum yum yum")
which(dtms4$dimnames==c("yum yum yum yum"))
which(dtms4$dimnames==as.String("yum yum yum yum"))
as.String("yum yum")
dim(dtms4$i)
length(dtms4$i)
length(dtms4$j)
length(dtms4$v)
inspect(dtms4[1,1])
inspect(dtms4)
head(inspect(dtms4))
head(inspect(dtms4[1:3,50000]))
head(inspect(dtms4[1:3,5000]))
dtms4$i[5000]
dtms4$j[5000]
dtms4$v[5000]
dtms4$dimnames[5000]
dt4<-as.matrix(dtms4)
dim(dt4)
8650*3
head(dt4)
head(colnames(dt4))
which(colnames(dt4)=="able get back work")
which(colnames(dt4)=="abl get back work")
dt4[,6]
dt2<-as.matrix(dtms4)
dim(dt2)
dt2<-as.matrix(dtms2)
dim(dt2)
head(dt2)
which(colnames(dt2)=="current hhost")
which(colnames(dt2)=="current host")
grep(dt2, "current", fixed = FALSE)
grep("current", dt2, fixed = FALSE)
regexpr("current", dt2, fixed = FALSE)
gregexpr("current", dt2, fixed = FALSE)
gregexpr("[current .+]", dt2, fixed = FALSE)
grep("[current .+]", dt2, fixed = FALSE)
grep("current host", dt2, fixed = FALSE)
which(colnames(dt2)=="current host")
which(colnames(dt2)=="current //.+")
which(colnames(dt2)=="current \\.+")
which(colnames(dt2)=="[current \\.+]")
which(colnames(dt2)=="current")
class(colnames(dt2))
class(names(dt2))
names(dt2)
charmatch("current", colnames(dt2))
charmatch("current host", colnames(dt2))
pmatch("current host", colnames(dt2))
pmatch("current", colnames(dt2))
pmatch("current ", colnames(dt2))
pmatch("current ", colnames(dt2))
grep("current ", colnames(dt2))
grep("current host", colnames(dt2))
text<-"current"
grep(text, colnames(dt2))
grep(text, colnames(as.matrix(dt3)))
grep(text, colnames(as.matrix(dtms3)))
grep(text, colnames(as.matrix(dtms4)))
grep(text, colnames(as.matrix(dtms1)))
grep("current", colnames(as.matrix(dtms1)))
grep("curren", colnames(as.matrix(dtms1)))
grep("currn", colnames(as.matrix(dtms1)))
grep("curr", colnames(as.matrix(dtms1)))
grep("romantic date at a", colnames(as.matrix(dtms1)))
grep("romantic date at a", colnames(as.matrix(dtms4)))
grep("romantic date at a", colnames(as.matrix(dtms3)))
grep("romantic date at a", colnames(as.matrix(dtms2)))
grep("romantic date", colnames(as.matrix(dtms2)))
grep("romantic date", colnames(as.matrix(dtms3)))
grep("romantic date", colnames(as.matrix(dtms4)))
grep("date", colnames(as.matrix(dtms4)))
dtms4[,1307:1309]
inspect(dtms4[,1307:1309])
grep("romantic", colnames(as.matrix(dtms4)))
grep("romantic", colnames(as.matrix(dtms3)))
grep("romantic", colnames(as.matrix(dtms2)))
grep("romantic", colnames(as.matrix(dtms1)))
dtms1[,33848]
inspect(dtms1[,33848])
n<-1:1000
plot(n)
2**2
a<-(2**2)**n
plot(a)
a
n<-1:500
a<-(2**2)**n
plot(a)
a
rm(a)
a<-(2**2)**n
a
plot(a)
n<-1:480
a<-(2**2)**n
plot(a)
import ggplot2
ggplot2
load(ggplot2)
library(lattice)
xyplot(n, a)
xyplot(n, a, method=line)
plot(n, a)
plot( a~n)
xyplot( a~n)
xyplot( a~n, ylog=TRUE)
n<-1:200
a<-(2**2)**n
xyplot( a~n, ylog=TRUE)
clear all
shiny::runApp('C:/Anaconda2/algos2/2016_report')
source('~/coursera/data scientist/Capstone/Coursera-SwiftKey/final/quiz/quiz4.R')
#
2+2
#2+2
library(RWeka)
gram2Tokenizer <- function(x) {NGramTokenizer(x, RWeka::Weka_control(min = 2, max = 2))}
gram3Tokenizer <- function(x) {NGramTokenizer(x, RWeka::Weka_control(min = 3, max = 3))}
gram4Tokenizer <- function(x) {NGramTokenizer(x, RWeka::Weka_control(min = 4, max = 4))}
dtm2 <-TermDocumentMatrix(docs, control = list(tokenize = gram2Tokenizer))
dtm3<- TermDocumentMatrix(docs, control = list(tokenize = gram3Tokenizer))
dtm4<- TermDocumentMatrix(docs, control = list(tokenize = gram4Tokenizer))
version
install.packages(c("abind", "acepack", "ape", "BH", "car", "caret", "chron", "cluster", "colorspace", "CORElearn", "covr", "crayon", "curl", "data.table", "DBI", "DEoptimR", "devtools", "digest", "dplyr", "e1071", "evaluate", "fields", "forecast", "foreign", "formatR", "gdtools", "ggplot2", "git2r", "googleVis", "highr", "Hmisc", "httr", "installr", "irlba", "jsonlite", "kernlab", "knitr", "lazyeval", "lubridate", "maps", "maptools", "Matrix", "mclust", "mgcv", "mime", "multcomp", "nlme", "openssl", "packrat", "plyr", "proto", "purrr", "quantmod", "quantreg", "R.oo", "R.utils", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "reshape2", "rgl", "rmarkdown", "RMySQL", "robustbase", "roxygen2", "rpart.plot", "rsconnect", "rsdmx", "RSQLite", "rstudioapi", "rversions", "RWeka", "RWekajars", "scales", "shiny", "sp", "spam", "SparseM", "stringdist", "stringi", "stringr", "svglite", "swirl", "TH.data", "tidyr", "tseries", "withr", "XML", "xml2", "yaml", "zoo"))
x<-1:12
y<-(12-x)*x*x*x
y
max(y)
x
y
install.packages("CausalImpact")
install.packages("devtools")
library(devtools)
devtools::install_github("google/CausalImpact")
install.packages("BoomSpikeSlab")
devtools::install_github("google/CausalImpact")
getwd()
setwd('jobs/upwork/Hamlet')
getwd()
myfile<-file.choose()
myfile
mydata<-read.csv(myfile, header = TRUE)
View(mydata)
View(mydata)
mydata$ga.date
type(mydata$ga.date)
class(mydata$ga.date)
class(mydata$ga.landingPagePath)
class(mydata$ga.newUsers)
class(mydata$X)
mydata$ga.date<-as.Date(mydata$ga.date)
type(mydata$ga.date)
class(mydata$ga.date)
min(mydata$ga.date)
max(mydata$ga.date)
library(dplyr)
data2<-group_by(mydata, ga.landingPagePath)
head(data2, 30)
View(mydata)
View(mydata)
View(data2)
View(data2)
paths<-unique(mydata$ga.landingPagePath)
len(paths)
dim(paths)
size(paths)
length(paths)
head(paths)
knitr::opts_chunk$set(echo = TRUE)
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
min(mydata$ga.date)
max(mydata$ga.date)
myfile<-file.choose()
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
min(mydata$ga.date)
max(mydata$ga.date)
myfile<-file.choose()
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
min(mydata$ga.date)
max(mydata$ga.date)
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
print('start date in file', min(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
print(['start date in file', min(mydata$ga.date])
print('test')
print('test',4)
print('test%i',4)
print('test'%i,4)
print('test'#i,4)
#
)
cat('test'i,4)
cat('test',4)
cat('test:',4)
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
cat('start date in file', min(mydata$ga.date))
cat('end date in file', max(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
cat('start date in file ', min(mydata$ga.date))
cat('end date in file ', max(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file ', min(mydata$ga.date))
cat('end date in file ', max(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file ', min(mydata$ga.date))
cat('end date in file ', as.Date(max(mydata$ga.date)))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
print('start date in file:')
min(mydata$ga.date)
cat('end date in file ', as.Date(max(mydata$ga.date)))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
print('start date in file:')
min(mydata$ga.date)
print('end date in file:')
max(mydata$ga.date)
sprintf('%Date, durnas')
sprintf('%Date, durnas',max(mydata$ga.date))
sprintf('%e, durnas',max(mydata$ga.date))
sprintf('%s, durnas',max(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
print('end date in file:')
max(mydata$ga.date)
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
print('end date in file: %s', max(mydata$ga.date))
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
sprintf('end date in file: %s', max(mydata$ga.date))
paths<-unique(mydata$ga.landingPagePath)
length(paths)
myfile<-file.choose()
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
sprintf('end date in file: %s', max(mydata$ga.date))
paths<-unique(mydata$ga.landingPagePath)
length(paths)
myfile<-file.choose()
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
sprintf('end date in file: %s', max(mydata$ga.date))
paths2<-unique(mydata$ga.landingPagePath)
length(paths)
paths2<-unique(mydata$ga.landingPagePath)
length(paths2)
paths2-paths
plot(mydata$ga.newUsers)
myfile<-file.choose()
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
sprintf('end date in file: %s', max(mydata$ga.date))
paths2<-unique(mydata$ga.landingPagePath)
length(paths2)
plot(mydata$ga.newUsers)
library(lattice)
xyplot(ga.newUsers~ga.date)
xyplot(ga.newUsers~ga.date, mydata)
xyplot(ga.newUsers~ga.date|ga.landingPagePath, mydata)
paths
sample(length(paths), 5)
testpaths<-sample(length(paths), 5)
paths[testpaths]
data2<-filter(mydata, ga.landingPagePath==paths[testpaths[0]])
data2<-filter(mydata, ga.landingPagePath==paths[testpaths[0]])
data2<-filter(mydata, ga.landingPagePath=paths[testpaths[0]])
data2<-filter(mydata, ga.landingPagePath==paths[testpaths[1]])
data2
data2<-filter(mydata, ga.landingPagePath==paths[testpaths] )
data2<-filter(mydata, ga.landingPagePath==paths[testpaths])
data2<-filter(mydata, ga.landingPagePath==any(paths[testpaths]))
data2<-filter(mydata, ga.landingPagePath==paths[testpaths])
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths]]
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
data2
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ])
data2<-mydata[ga.landingPagePath %in% paths[testpaths], ]
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
mydata
mydata<-read.csv(myfile, header = TRUE)
mydata$ga.date<-as.Date(mydata$ga.date)
sprintf('start date in file: %s', min(mydata$ga.date))
sprintf('end date in file: %s', max(mydata$ga.date))
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
data2
mydata
View(data2)
View(data2)
xyplot(ga.newUsers~ga.date|ga.landingPagePath, mydata)
xyplot(ga.newUsers~ga.date|ga.landingPagePath, data2)
testpaths<-sample(length(paths), 6)
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
xyplot(ga.newUsers~ga.date|ga.landingPagePath, data2)
testpaths<-sample(length(paths), 9)
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
xyplot(ga.newUsers~ga.date|ga.landingPagePath, data2)
testpaths<-sample(length(paths), 10)
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
xyplot(ga.newUsers~ga.date|ga.landingPagePath, data2)
data3<-group_by(mydata, ga.landingPagePath)
data4<-summarize(data3, count=n())
View(data4)
View(data4)
data4
testpaths
paths[testapths]
paths[testpaths]
data4[data4$count==1]
class(data4$count)
data4[data4$count==1,]
sum(data4$count)
paths2<-unique(mydata$ga.landingPagePath)
sprintf('total different landing pages %s:', length(paths2))
paths2<-unique(mydata$ga.landingPagePath)
sprintf('total different landing pages: %s', length(paths2))
sumdata<-summarize(group_by(mydata, ga.landingPagePath), count=n())
sumdata
sumdata<-summarize(group_by(mydata, ga.landingPagePath), count=n())
head(sumdata)
sumdata<-summarize(group_by(mydata, ga.landingPagePath), count=n())
sumdata[1:10,]
sumdata<-summarize(group_by(mydata, ga.landingPagePath), count=n())
sumdata<-sumdata[order(-count)]
View(sumdata)
View(sumdata)
sumdata[order(count)]
sumdata<-summarize(group_by(mydata, ga.landingPagePath), counts=n())
sumdata<-sumdata[order(-counts)]
sumdata$counts
sumdata<-sumdata[order(-counts),]
sumdata<-sumdata[order(counts),]
sumdata[order(counts),]
names(sumdata)
sumdata[order('counts'),]
sumdata[,order('counts')]
x<-sumdata[,order('counts')]
View(x)
View(x)
x<-sumdata[order('counts'),]
class(sumdata)
class(sumdata$counts)
class(sumdata$ga.landingPagePath)
sumdata[order(counts)]
sumdata[order(sumdata$counts)]
sumdata[7]
sumdata[order(sumdata$counts),]
sumdata[order(-sumdata$counts),]
x<-sumdata[order(-sumdata$counts),]
plot(x$counts)
ntile(x, 5)
ntile(x$counts, 5)
sumdata<-sumdata[order(-sumdata$counts),]
head(sumdata)
sumdata<-summarize(group_by(mydata, ga.landingPagePath), counts=n())
sumdata<-sumdata[order(-sumdata$counts)]
sumdata<-summarize(group_by(mydata, ga.landingPagePath), counts=n())
sumdata<-sumdata[order(-sumdata$counts), ]
sumdata$ntiles<-ntile(sumdata$counts, 10)
sumdata[1:10,]
sample(sumdata[sumdata$ntiles==10], 2)
paths<-unique(mydata$ga.landingPagePath)
sprintf('total different landing pages: %s', length(paths))
testpaths<-sample(length(paths), 5)
data2<-mydata[mydata$ga.landingPagePath %in% paths[testpaths], ]
xyplot(ga.newUsers~ga.date|ga.landingPagePath, data2)
sumdata<-summarize(group_by(mydata, ga.landingPagePath), counts=n())
sumdata<-sumdata[order(-sumdata$counts), ]
sumdata$ntiles<-ntile(sumdata$counts, 10)
runif(20, 0,10)
floor(runif(20, 0,10))
floor(runif(20, 1,10))
floor(runif(20, 1,11))
floor(runif(50, 1,11))
sumdata$groups<-lapply(sumdata$ntiles,  floor(runif(1, 1,k+1)))
k<-7
sumdata$groups<-lapply(sumdata$ntiles,  floor(runif(1, 1,k+1)))
runif(1,1,k+1)
floor(runif(1,1,k+1))
sumdata$groups<-sapply(sumdata$ntiles,  floor(runif(1, 1,k+1)))
sumdata$groups<-vapply(sumdata$ntiles,  floor(runif(1, 1,k+1)))
floor(runif(1,1,k+1))
sumdata$groups<-vapply(sumdata$ntiles,  floor(runif(1, 1,k+1)))
sample(1,1,k+1)
sample(1,1,k+1)
sample(1,1,k+1)
sample(1,1,k+1)
sample(1:k+1, 1. replace = TRUE)
sample(1:k+1, 1, replace = TRUE)
sample(1:k+1, 1, replace = TRUE)
sample(1:k+1, 1, replace = TRUE)
sample(1:k+1, 1, replace = TRUE)
sample(1:k+1, 1, replace = TRUE)
sample(1:k, 1, replace = TRUE)
sample(1:k, 1, replace = TRUE)
sample(1:k, 10, replace = TRUE)
sample(1:k, 10, replace = TRUE)
sumdata$groups<-NA
sumdata[1:10,]
sumdata$groups<-NaN
sumdata[1:10,]
sumdata[sumdata$ntiles==10,]
sumdata[sumdata$ntiles==10]
length(sumdata[sumdata$ntiles==10,]$counts)
sample(1:k, 10, replace = TRUE)
sample(1:k, length(sumdata[sumdata$ntiles==10,]$counts), replace = TRUE)
rowname(sumdata)
row.names(sumdata)
sampledsumdata<-sumdata[]sample()
nrow(sumdata)
sampledsumdata<-sumdata[sumdata$ntiles==10,]
sampledsumdata2<-sampledsumdata[sample(nrows(sampledsumdata))]
sampledsumdata2<-sampledsumdata[sample(nrows(sampledsumdata)),]
sampledsumdata2<-sampledsumdata[sample(nrow(sampledsumdata)),]
head(sampledsumdata)
head(sampledsumdata2)
plot(x$counts)
xyplot(ntiles~counts, sumdata)
sampledsumdata<-sumdata[sumdata$ntiles==1,]
View(sampledsumdata)
